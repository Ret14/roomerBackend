# Generated by Django 4.1.3 on 2022-12-21 15:03

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import roomerApi.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birth_date', models.DateField(auto_now=True)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('avatar', models.ImageField(default='static/img/test-avatar-1.png', upload_to='')),
                ('about_me', models.CharField(default="I'm good", max_length=1000)),
                ('employment', models.CharField(choices=[('NE', 'Not Employed'), ('E', 'Employed'), ('S', 'Searching For Work')], default='E', max_length=3)),
                ('alcohol_attitude', models.CharField(choices=[('P', 'Positive'), ('N', 'Negative'), ('I', 'Indifferent')], default='N', max_length=1)),
                ('smoking_attitude', models.CharField(choices=[('P', 'Positive'), ('N', 'Negative'), ('I', 'Indifferent')], default='N', max_length=1)),
                ('sleep_time', models.CharField(choices=[('N', 'Night'), ('D', 'Day'), ('O', 'Occasionally')], default='N', max_length=1)),
                ('personality_type', models.CharField(choices=[('E', 'Extraverted'), ('I', 'Introverted'), ('M', 'Mixed')], default='E', max_length=1)),
                ('clean_habits', models.CharField(choices=[('N', 'Neat'), ('D', 'It Depends'), ('C', 'Chaos')], default='N', max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', roomerApi.managers.ProfileManager()),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RoomAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Housing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_price', models.IntegerField()),
                ('deposit', models.IntegerField(default=django.db.models.deletion.SET_NULL, null=True)),
                ('description', models.CharField(max_length=1000)),
                ('bedrooms_count', models.IntegerField(choices=[(3, 3), (4, 4), (2, 2), (1, 1), (5, 5)])),
                ('bathrooms_count', models.IntegerField(choices=[(3, 3), (4, 4), (2, 2), (1, 1), (5, 5)])),
                ('housing_type', models.CharField(choices=[('F', 'Flat'), ('DU', 'Duplex'), ('H', 'House'), ('DO', 'Dorm')], max_length=5)),
                ('sharing_type', models.CharField(choices=[('P', 'Private'), ('S', 'Shared')], max_length=1)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('room_attributes', models.ManyToManyField(to='roomerApi.roomattribute')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='interests',
            field=models.ManyToManyField(blank=True, related_name='profiles', to='roomerApi.interest'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(choices=[(3, 3), (4, 4), (2, 2), (1, 1), (5, 5)])),
                ('comment', models.CharField(max_length=1000)),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('author', 'user')},
            },
        ),
    ]
